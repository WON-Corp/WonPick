<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="postMapper">

	<resultMap id="postResultSet"  type="Post">
		<result column="post_id" property="postId"/>
		<result column="user_id" property="userId"/>
		<result column="user_p_img" property="userPfImg"/>
		<result column="post_title" property="postTitle"/>
		<result column="post_content" property="postContent"/>
		<result column="posting_time" property="postingTime"/>
		<result column="count" property="count"/>
		<result column="img_file" property="imgFile"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<select id="selectList" resultMap="postResultSet">
		SELECT POST_ID, P.USER_ID USER_ID, M.P_IMG USER_P_IMG, POST_TITLE, POST_CONTENT, TO_CHAR(POSTING_TIME, 'RR/MM/DD HH24:MI') "POSTING_TIME", IMG_FILE, P.STATUS STATUS
		FROM POST P, MEMBER M
		WHERE P.USER_ID = M.USER_ID AND P.STATUS = 'Y'
		ORDER BY POST_ID DESC
	</select>
	
	<insert id="insertBoard">
		INSERT INTO POST
			VALUES (SEQ_POST_NO.NEXTVAL, #{userId}, #{postTitle}, #{postContent}, SYSDATE, DEFAULT, #{imgFile}, DEFAULT)
	</insert>
	
	<select id="postDetail" resultMap="postResultSet">
		SELECT POST_ID, P.USER_ID USER_ID, M.P_IMG USER_P_IMG, POST_TITLE, POST_CONTENT, TO_CHAR(POSTING_TIME, 'RR/MM/DD HH24:MI') "POSTING_TIME", IMG_FILE, P.STATUS STATUS
		FROM POST P, MEMBER M
		WHERE P.USER_ID = M.USER_ID AND POST_ID = #{postId} AND P.STATUS = 'Y'
	</select>
	
	<update id="updateCount">
		UPDATE POST SET COUNT = COUNT + 1 WHERE POST_ID = #{postId} AND STATUS = 'Y'
	</update>
	
	
	<!-- 저장한 게시물 목록만 불러오는 sql문 -->
	<select id="selectSaveList" resultMap="postResultSet">
	SELECT *
	From POST P
	JOIN SAVE_LIST S ON P.POST_ID = S.SAVED_POST_ID
	WHERE S.user_id=#{userId}
	</select>
	
	<select id="searchPostList" resultMap="postResultSet">
		SELECT * FROM POST WHERE (USER_ID LIKE #{keyword} OR POST_TITLE LIKE #{keyword} OR POST_CONTENT LIKE #{keyword}) AND STATUS = 'Y'
	</select>
	
	<select id="selectProfilePostList" resultMap="postResultSet">
		SELECT POST_ID, P.USER_ID USER_ID, M.P_IMG USER_P_IMG, POST_TITLE, POST_CONTENT, TO_CHAR(POSTING_TIME, 'RR/MM/DD HH24:MI') "POSTING_TIME", IMG_FILE, P.STATUS STATUS
		FROM POST P, MEMBER M
		WHERE P.USER_ID = M.USER_ID AND P.USER_ID = #{userId} AND P.STATUS = 'Y'
		ORDER BY POST_ID DESC
	</select>
	<!-- 
	<delete id="deletePost" parameterType="int">
	    DELETE FROM POST WHERE POST_ID = #{postId}
	</delete>
	 -->
	<update id="updatePost" parameterType="Post">
	    UPDATE POST 
	    SET POST_CONTENT = #{postContent}
	    WHERE POST_ID = #{postId}
	</update>
	
	
	<!-- POST_COMMENT_LIKE 테이블에서 댓글 좋아요 삭제-->
	<delete id="deletePostCommentLike">
	DELETE FROM POST_COMMENTS_LIKE 
	WHERE COMMENT_ID IN (
    SELECT POST_COMMENT_ID 
    FROM POST_COMMENT
    WHERE POST_ID = #{postId}
	)
	</delete>
	
	<!-- POST_COMMENT 테이블에서 댓글 삭제-->
	<delete id="deletePostComment">
	DELETE FROM POST_COMMENT
	WHERE POST_ID = #{postId}
	</delete>
	

	<!-- POST_LIKE 테이블에서 좋아요 삭제-->
	<delete id="deletePostLike">
	DELETE FROM POST_LIKE
	WHERE POST_ID = #{postId}
	</delete>
	

	<!-- SAVE_LIST 테이블에서 저장된 게시물 삭제-->
	<delete id="deleteSaveList">
	DELETE FROM SAVE_LIST
	WHERE SAVED_POST_ID = #{postId}
	</delete>

	<!-- ALERT 테이블에서 알림 삭제-->
	<delete id="deleteAlert">
	DELETE FROM ALERT
	WHERE USER_ID = (SELECT USER_ID FROM POST WHERE POST_ID = #{postId})
	</delete>

	<!-- POST 테이블에서 게시물 삭제-->
	<delete id="deletePost">
	DELETE FROM POST
	WHERE POST_ID = #{postId} AND USER_ID = #{userId}
	</delete>


</mapper>